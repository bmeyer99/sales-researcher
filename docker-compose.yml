services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app # For development, sync local changes
      - /app/node_modules # Don't overwrite node_modules in container
      - /app/.next # Persist .next folder if needed for dev
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-research"
      - "traefik.http.routers.research.entrypoints=http"
      - "traefik.http.routers.research.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research.middlewares=traefik-https-redirect"
      - "traefik.http.routers.research-secure.entrypoints=https"
      - "traefik.http.routers.research-secure.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research-secure.middlewares=secure-headers,rate-limit,ssl-forwarder"
      - "traefik.http.middlewares.ssl-forwarder.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.research-secure.tls=true"
      - "traefik.http.routers.research-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.research-secure.tls.options=default"
      - "traefik.http.services.research-secure.loadbalancer.server.port=80"
    # depends_on:
    #   - backend # Enable if frontend needs backend during its build/startup

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app # For development, sync local changes
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    # The command to run the FastAPI app will be in the backend Dockerfile.
    # For Celery workers, we might override the command or have a separate service definition.

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data # Optional: for Redis data persistence

volumes:
  redis_data:
    driver: local