services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app # For development, sync local changes.
      - /app/node_modules # Don't overwrite node_modules in container
      - /app/.next # Persist .next folder if needed for dev
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
    # ports:  # PUBLIC FACING HOST - NO PORT PUBLISHING
    #   - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-research"
      - "traefik.http.routers.research.entrypoints=http"
      - "traefik.http.routers.research.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research.middlewares=traefik-https-redirect"
      - "traefik.http.routers.research-secure.entrypoints=https"
      - "traefik.http.routers.research-secure.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research-secure.middlewares=secure-headers,rate-limit,ssl-forwarder"
      - "traefik.http.middlewares.ssl-forwarder.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.research-secure.tls=true"
      - "traefik.http.routers.research-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.research-secure.tls.options=default"
      - "traefik.http.services.research-secure.loadbalancer.server.port=3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-research
      - researcher

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app # For development, sync local changes
    env_file:
      - ./backend/.env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    # ports:  # PUBLIC FACING HOST - NO PORT PUBLISHING
    #   - "8000:8000"
    networks:
      - researcher
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULTS_BACKEND_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    networks:
      - researcher
    depends_on:
      - redis
    command: celery -A backend.celery_app worker --loglevel=info

  redis:
    image: redis:alpine
    # ports:  # PUBLIC FACING HOST - NO PORT PUBLISHING
      # - "6379:6379" 
    networks:
      - researcher
    volumes:
      - redis_data:/data # Optional: for Redis data persistence
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Use an environment variable for password
    command: redis-server --requirepass ${REDIS_PASSWORD} # Set password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"] # Basic health check
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:
    driver: local

networks:
  traefik-research:
    external: true
  researcher:
    driver: bridge