services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
        NEXT_PUBLIC_ASSET_PREFIX: ${NEXT_PUBLIC_ASSET_PREFIX}
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-research"
      - "traefik.http.routers.research.entrypoints=http"
      - "traefik.http.routers.research.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research.middlewares=traefik-https-redirect"
      - "traefik.http.routers.research-secure.entrypoints=https"
      - "traefik.http.routers.research-secure.rule=Host(`research.no13productions.com`)"
      - "traefik.http.routers.research-secure.middlewares=secure-headers,rate-limit,ssl-forwarder"
      - "traefik.http.middlewares.ssl-forwarder.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.research-secure.tls=true"
      - "traefik.http.routers.research-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.research-secure.tls.options=default"
      - "traefik.http.services.research-secure.loadbalancer.server.port=3000"
    depends_on:
      - backend
    networks:
      - traefik-research
      - researcher

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - REDIS_PASSWORD=jawjfeoifpqweoaaskdjf32twsadg
      - FRONTEND_URL=http://frontend:3000 
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID} 
    networks:
      - researcher
    depends_on:
      - redis

  backend_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - REDIS_URL=redis://:jawjfeoifpqweoaaskdjf32twsadg@redis:6379/0
      - CELERY_RESULTS_BACKEND_URL=redis://:jawjfeoifpqweoaaskdjf32twsadg@redis:6379/0
      - FRONTEND_URL=http://frontend:3000
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
    networks:
      - researcher
    depends_on:
      - redis
    command: celery -A celery_app worker --loglevel=info

  redis:
    image: redis:alpine
    networks:
      - researcher
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=jawjfeoifpqweoaaskdjf32twsadg
    command: redis-server --requirepass jawjfeoifpqweoaaskdjf32twsadg
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "jawjfeoifpqweoaaskdjf32twsadg", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:
    driver: local

networks:
  traefik-research:
    external: true
  researcher:
    driver: bridge
